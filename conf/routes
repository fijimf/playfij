# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET  /deepfij/                                          controllers.Application.index
GET  /deepfij/teams                                     controllers.Schedule.teams
GET  /deepfij/teams/:key                                controllers.Schedule.team(key)
GET  /deepfij/teams/:key/:seasonKey                     controllers.Schedule.teamSeason(key, seasonKey)
GET  /deepfij/search                                    controllers.Schedule.search(q:String)
GET  /deepfij/stats/:key                                controllers.Schedule.stats(key)
#TODO Regex this shit
GET  /deepfij/:yyyy/:mm/:dd                             controllers.Schedule.date(yyyy:Int,mm:Int,dd:Int)

GET  /api/quote                                         controllers.Quote.random
GET  /api/stats/:key                                    controllers.Statistics.stats(key)
GET  /api/games                                         controllers.Game.games

### SECURED PAGES ###
GET  /admin                                     controllers.admin.Admin.index
GET  /admin/seasons                             controllers.Season.list
POST /admin/seasons                             controllers.Season.submit
GET  /admin/seasons/new                         controllers.Season.create
GET  /admin/seasons/:key                        controllers.Season.view(key)
GET  /admin/seasons/:key/edit                   controllers.Season.edit(key)
POST /admin/seasons/delete                      controllers.Season.delete

GET  /admin/conferences                         controllers.Conference.list
POST /admin/conferences                         controllers.Conference.submit
GET  /admin/conferences/new                     controllers.Conference.create
GET  /admin/conferences/:key                    controllers.Conference.view(key)
GET  /admin/conferences/:key/edit               controllers.Conference.edit(key)
POST /admin/conferences/delete                  controllers.Conference.delete

GET  /admin/teams                               controllers.Team.list
POST /admin/teams                               controllers.Team.submit
GET  /admin/teams/new                           controllers.Team.create
GET  /admin/teams/test                          controllers.Team.test
GET  /admin/teams/:key/edit                     controllers.Team.edit(key)
POST /admin/teams/delete                        controllers.Team.delete
POST /admin/teams/add-alias                     controllers.Team.addAlias

GET  /admin/games                               controllers.Game.list
POST /admin/games                               controllers.Game.submit
GET  /admin/games/new                           controllers.Game.create
GET  /admin/games/:id                           controllers.Game.view(id)
GET  /admin/games/:id/edit                      controllers.Game.edit(id)
POST /admin/games/delete                        controllers.Game.delete

GET  /admin/quotes                              controllers.Quote.list
POST /admin/quotes                              controllers.Quote.submit
GET  /admin/quotes/new                          controllers.Quote.create
GET  /admin/quotes/:id                          controllers.Quote.view(id:Long)
GET  /admin/quotes/:id/edit                     controllers.Quote.edit(id:Long)
POST /admin/quotes/delete                       controllers.Quote.delete

GET  /admin/models                              controllers.StatisticalModel.list
POST /admin/models                              controllers.StatisticalModel.submit
GET  /admin/models/new                          controllers.StatisticalModel.create
GET  /admin/models/:id                          controllers.StatisticalModel.view(id:Long)
GET  /admin/models/:id/edit                     controllers.StatisticalModel.edit(id:Long)
POST /admin/models/delete                       controllers.StatisticalModel.delete

GET  /admin/database                            controllers.admin.Database.index
POST /admin/database/rebuild                    controllers.admin.Database.rebuildDatabase
GET  /admin/database/show-ddl                   controllers.admin.Database.showDDL

GET  /admin/ncaa                                controllers.admin.Ncaa.index
POST /admin/ncaa/scrape-teams                   controllers.admin.Ncaa.scrapeTeams
POST /admin/ncaa/scrape-games                   controllers.admin.Ncaa.scrapeGames
POST /admin/ncaa/scrape-team-key                controllers.admin.Ncaa.scrapeTeamByKey

GET  /admin/kenpom                              controllers.admin.KenPom.index
POST /admin/kenpom/scrape-games                 controllers.admin.KenPom.scrapeGames

GET  /admin/model-index                         controllers.admin.RunModels.index
GET  /admin/run-models                          controllers.admin.RunModels.run
GET  /admin/invalidate-cache                    controllers.admin.Admin.invalidateCache
### SECURE SOCIAL ###
# Login page
GET  /login                                     securesocial.controllers.LoginPage.login
GET  /logout                                    securesocial.controllers.LoginPage.logout

# User Registration and password handling
GET  /signup                                    securesocial.controllers.Registration.startSignUp
POST /signup                                    securesocial.controllers.Registration.handleStartSignUp
GET  /signup/:token                             securesocial.controllers.Registration.signUp(token)
POST /signup/:token                             securesocial.controllers.Registration.handleSignUp(token)
GET  /reset                                     securesocial.controllers.Registration.startResetPassword
POST /reset                                     securesocial.controllers.Registration.handleStartResetPassword
GET  /reset/:token                              securesocial.controllers.Registration.resetPassword(token)
POST /reset/:token                              securesocial.controllers.Registration.handleResetPassword(token)
GET  /password                                  securesocial.controllers.PasswordChange.page
POST /password                                  securesocial.controllers.PasswordChange.handlePasswordChange

# Providers entry points
GET  /authenticate/:provider                    securesocial.controllers.ProviderController.authenticate(provider)
POST /authenticate/:provider                    securesocial.controllers.ProviderController.authenticateByPost(provider)
GET  /not-authorized                            securesocial.controllers.ProviderController.notAuthorized

# Map static resources from the /public folder to the /assets URL path
GET  /assets/*file                              controllers.Assets.at(path="/public", file)
